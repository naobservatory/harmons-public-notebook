{
  "hash": "1237290c3df2d0cc851eeb9eade612ae",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Blog 3: Pre-analysis\"\nsubtitle: \"Combined whole blood and plasma analysis\"\nauthor: \"Harmon Bhasin\"\ndate: 2024-09-24\nformat:\n  html:\n    toc: true \n    toc-title: \"Table of contents\" \n    number-sections: true \n    number-depth: 3 \n    toc-location: right \n    page-layout: full \n    code-fold: true \n    code-tools: true \n    df-print: paged \n    fig-format: svg\neditor: \n  visual: true\n  render-on-save: false\ncomments:\n  hypothesis: true \nexecute: \n  freeze: auto\n  cache: true\ntitle-block-banner: \"#de2d26\"\n---\n\n\n\n# Introduction\nIn our [previous post](https://naobservatory.org/blog/exploring-blood-biosurveillance-part2), we identfied four sampling strategies, each coming from either whole blood or plasma. To take this analysis a step further, we analyze the metagenomic sequencing data from various whole blood and plasma based studies. This analysis will help us understand the last piece missing from the puzzle: what viruses are present and detectable in whole blood and plasma using metagenomic sequencing and how do both sample types compare to each other.\n\nWe performed a literature search for large (>100M read pairs), untargeted whole blood and plasma metagenomic studies. We identified 6 such datasets (Table 1), obtained the raw sequencing data, and processed it with a Kraken2-based computational pipeline to estimate the relative abundance of human-infecting viruses (Methods).  \n\n# Data\n\n| **Study**                    | **Sample type** | **Viral Enrichment** | **Sequencing type** | **Country** | **Read pairs** | **Reference**                                  |\n|------------------------------|-----------------|----------------------|---------------------|-------------|----------------|------------------------------------------------|\n| Cebria-Mendoza et al. (2021) | Plasma          | Yes                  | DNA + RNA           | Spain       | 230M           | [link](https://doi.org/10.3390/v13112322)              |\n| Thijssen et al. (2023)       | Plasma          | No                   | DNA + RNA           | Iran        | 116M           | [link](https://doi.org/10.3390/v15071425)              |\n| Mengyi et al. (2023)         | Plasma          | No                   | DNA                 | China       | 3.4B           | [link](https://doi.org/10.1016%2Fj.onehlt.2023.100602) |\n| Thompson et al. (2023)       | Whole blood     | No                   | RNA                 | USA         | 27.7B          | [link](https://doi.org/10.1038/s41591-022-02107-4)     |\n| O'Connell et al. (2023)      | Whole blood     | No                   | RNA                 | USA         | 3.1B           | [link](https://doi.org/10.1186/s12863-024-01223-z)     |\n| Aydillo et al. (2022)        | Whole blood     | No                   | RNA                 | USA         | 1.7B           | [link](https://doi.org/10.1038/s41541-022-00583-w)     |\n: **Table 1**: Studies included in the analysis. {.striped .hover}\n\n## Plasma\n### Cebria-Mendoza et al. (2021)\nThis dataset from Spain has 60 samples, each derived from plasma pools of 8-13 people from Spain. In total, 567 healthy individuals contributed to these pools. For each pooled sample, a combined DNA and RNA library preparation was performed, resulting in a single sequencing output that captures both nucleic acid types. This approach provides comprehensive genetic information but precludes separate analysis of DNA and RNA from individual samples.\n\n*Full analysis can be found [here](https://data.securebio.org/harmons-public-notebook/notebooks/2024-07-08_cebria-mendoza.html)*\n\n### Thijssen et al. (2023)\nThis dataset from Iran has 21 samples, each derived from plasma pools of 5 people from Iran. In total, 100 healthy individuals contributed to these pools. For each pooled sample, a combined DNA and RNA library preparation was performed, resulting in a single sequencing output that captures both nucleic acid types, with Illumina NextSeq 500, producing 2x150 bp reads.\n\n*Full analysis can be found [here](https://data.securebio.org/harmons-public-notebook/notebooks/2024-07-22-thijssen.html)*\n\n### Mengyi et al. (2023)\nThis dataset from China has 201 samples, each derived from plasma pools of 160 donations from 7 different locations between 2012-2018. In total, 10,720 donations contributed to these pools (we do not know the number of individuals). They did DNA-sequencing for each pool, with Illumina HiSeq 4500, producing 2x150 bp reads.\n\n*Full analysis can be found [here](https://data.securebio.org/harmons-public-notebook/notebooks/2024-07-23-mengyi.html)*\n\n## Whole blood\n\n### Thompson et al. (2023)\nThis dataset from the USA has 417 samples, with 353 individuals positive for SARS-CoV-2 and 65 individuals negative, for a total of 418 individuals. They did RNA-sequencing for each sample, with Illumina NovaSeq 6000, producing 2x100 bp reads.\n\n*Full analysis is in progress*\n\n### O'Connell et al. (2023)\n\nThis dataset from the USA has 138 samples, with 138 individuals presenting to the emergency department with symptoms or complications. They did RNA-sequencing for each sample using Illumina NovaSeq 6000, producing 2x150 bp reads.\n\n*Full analysis is in progress*\n\n### Aydillo et al. (2022)\n\nThis dataset from the USA has 53 samples, with 53 healthy individuals. They did RNA-sequencing for each sample, with Illumina NovaSeq 6000, producing 2 x 95 bp reads.\n\n*Full analysis is in progress*\n\n# Methods\nThe pipeline for analysis was developed by William Bradshaw, and slightly modifyed by me. It can be found [here](https://github.com/harmonbhasin/mgs-workflow). Here is a brief description of the pipeline, taken directly from the README:\n\n> The run workflow then consists of four phases:\n>\n> 1. A preprocessing phase, in which input files undergo adapter & quality trimming, deduplication, and ribodepletion.\n> 2. A taxonomic profiling phase, in which Kraken2 is used to assess the overall taxonomic composition of the input data and assess how it changes across different steps in the preprocessing phase.\n> 3. A viral identification phase, in which a custom multi-step pipeline based around Bowtie2 and Kraken2 is used to sensitively and specifically identify human-infecting virus (HV) reads in the input data for downstream analysis.\n> 4. A final QC and output phase, in which FASTQC, MultiQC and other tools are used to assess the quality of the data produced by the pipeline at various steps and produce summarized output data for downstream analysis and visualization.\n\n![Diagram of the analysis pipeline (we do not use the BLAST Validation and only use FASTP for quality trimming and cleaning).](https://github.com/harmonbhasin/mgs-workflow/blob/master/readme-workflow-diagram.png)\n\n# Results\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Kingdom composition\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Import composition data\ntax_final_dirs <- file.path(results_dirs, \"taxonomy_final\")\ncomp_paths <- file.path(tax_final_dirs, \"taxonomic_composition.tsv.gz\")\n\ncomp <- lapply(comp_paths, read_tsv, show_col_types = FALSE) %>% bind_rows() %>%\n  inner_join(libraries, by='sample')\n\nsample_type_comp <- comp %>%\n  filter(classification %in% classifications) %>%\n  group_by(sample_type, classification) %>%\n  summarize(n_reads = sum(n_reads), .groups = \"drop_last\") %>%\n  ungroup() %>%\n  group_by(sample_type) %>%\n  mutate(total_reads = sum(n_reads)) %>%\n  ungroup() %>%\n  group_by(sample_type, classification) %>%\n  mutate(p_reads = n_reads / total_reads) %>%\n  select(sample_type, classification, p_reads) %>%\n  ungroup()\n\n# Plot overall composition\ng_comp <- g_comp_base + geom_comp(data = sample_type_comp) +\n  scale_y_pc_reads(limits = c(0,1.01), breaks = seq(0,1,0.2)) +\n  scale_fill_classification() + \n  ggtitle(\"Read composition (all reads, all groups)\") +\n  coord_flip()\ng_comp\n```\n\n::: {.cell-output-display}\n![**Figure 1**: Read composition](2024-09-24-blog3-preanalysis_files/figure-html/kingdom-fraction-1.svg)\n:::\n\n```{.r .cell-code}\nsample_type_comp_summ <- sample_type_comp %>% \n  mutate(p_reads = sprintf(\"%0.6f %%\", p_reads*100)) %>%\n  pivot_wider(names_from = classification, values_from = p_reads)\n\nsample_type_comp_summ %>% kable()\n```\n\n::: {.cell-output-display}\n\n\n|sample_type |Archaeal   |Bacterial  |Human       |Unassigned |Viral      |\n|:-----------|:----------|:----------|:-----------|:----------|:----------|\n|plasma      |0.002001 % |1.515024 % |94.223525 % |4.108680 % |0.150770 % |\n|whole-blood |0.000100 % |0.024519 % |99.853072 % |0.122064 % |0.000245 % |\n\n\n\n**Figure 1**: Read composition\n:::\n\n```{.r .cell-code}\n# Subset to only include the datasets that have viral enrichment\nsubset_sample_type_comp <- comp %>%\n  filter(dataset %in% c(\"cebriamendoza2021\", \"thompson2023\",\"oconnell2023\", \"aydillo2022\")) %>%\n  filter(classification %in% classifications) %>%\n  group_by(sample_type, classification) %>%\n  summarize(n_reads = sum(n_reads), .groups = \"drop_last\") %>%\n  ungroup() %>%\n  group_by(sample_type) %>%\n  mutate(total_reads = sum(n_reads)) %>%\n  ungroup() %>%\n  group_by(sample_type, classification) %>%\n  mutate(p_reads = n_reads / total_reads) %>%\n  select(sample_type, classification, p_reads) %>%\n  ungroup()\n\nsubset_sample_type_comp_summ <- subset_sample_type_comp %>% \n  mutate(p_reads = sprintf(\"%0.6f %%\", p_reads*100)) %>%\n  pivot_wider(names_from = classification, values_from = p_reads) %>%\n  mutate(sample_type = ifelse(sample_type == \"plasma\", \"plasma (viral enrichment)\", \"whole-blood\"))\n\nsubset_sample_type_comp_summ %>% kable()\n```\n\n::: {.cell-output-display}\n\n\n|sample_type               |Archaeal   |Bacterial   |Human       |Unassigned  |Viral      |\n|:-------------------------|:----------|:-----------|:-----------|:-----------|:----------|\n|plasma (viral enrichment) |0.033110 % |49.891894 % |1.926983 %  |42.163597 % |5.984416 % |\n|whole-blood               |0.000100 % |0.024519 %  |99.853072 % |0.122064 %  |0.000245 % |\n\n\n\n**Figure 1**: Read composition\n:::\n:::\n\n\n\nComparing the average kingdom fraction between sample types reveals that whole blood samples have higher human fractions than plasma, whereas plasma has higher unassigned, archaeal, bacterial, and viral fractions. However, if we instead only look at the plasma dataset that did viral enrichment, we see a stark difference in composition. Specifically, the plasma samples only have around 2% human reads, with around 6% viral reads.\n\n\n\n\n\n\n\nAnother way we can look at this is by controlling for human reads across all datasets. When we do this over all whole blood and plasma datasets, we can see that they have similar read composition across the board. However, plasma has a higher viral read fraction by a magnitude of 10.\n\n## Human-infecting viruses\n\n### Overview\n\n\n\n\n\n\n\n\n\n\n\n\nWhen comparing the relative abundance of human-infecting viruses between sample types, we see that the plasma samples have a higher relative abundance of human-infecting viruses than the whole blood samples (samples with 0 reads are filtered out). Compare the mean relative abundance of human infecting viruses between plasma and whole blood and we see that plasma has a relative abundance 3 orders of magnitude higher.\n\n\n\n\n\n\n\nIf we control for human reads, we see that the relationship remains the same.\n\n### Family composition\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhv_reads_family <- readRDS(\"/Users/harmonbhasin/work/securebio/blogs/blog_3/hv_reads_family.RDS\")\nthreshold_major_family <- 0.01\n\n# Count reads for each human-viral family\nhv_family_counts <- hv_reads_family %>% \n  group_by(name, taxid, sample_type) %>%\n  count(name = \"n_reads_hv\") %>%\n  group_by(sample_type) %>%\n  mutate(p_reads_hv = n_reads_hv/sum(n_reads_hv))\n\n# Identify high-ranking families and group others\nhv_family_major_tab <- hv_family_counts %>% group_by(name) %>% \n  filter(p_reads_hv == max(p_reads_hv)) %>% filter(row_number() == 1) %>%\n  arrange(desc(p_reads_hv)) %>% filter(p_reads_hv > threshold_major_family)\nhv_family_counts_major <- hv_family_counts %>%\n  mutate(name_display = ifelse(name %in% hv_family_major_tab$name, name, \"Other\")) %>%\n  group_by(sample_type, name_display) %>%\n  summarize(n_reads_hv = sum(n_reads_hv), p_reads_hv = sum(p_reads_hv), \n            .groups=\"drop\") %>%\n  mutate(name_display = factor(name_display, \n                               levels = c(hv_family_major_tab$name, \"Other\")))\nhv_family_counts_display <- hv_family_counts_major %>%\n  rename(p_reads = p_reads_hv, classification = name_display)\n\n# Create a custom color palette with up to 20 colors\ncustom_palette <- c(\n  brewer.pal(12, \"Paired\"),\n  brewer.pal(12, \"Set3\")\n)\n\nn_classifications <- length(unique(hv_family_counts_display$classification)) - 1\n\ncustom_palette_with_black <- c(\n  custom_palette[1:n_classifications],\n  \"black\"\n)\n\n# Get most prominent families for text\nhv_family_collate <- hv_family_counts %>%\n  group_by(name, taxid, sample_type) %>% \n  summarize(n_reads_tot = sum(n_reads_hv),\n            p_reads_max = max(p_reads_hv), .groups=\"drop\") %>% \n  arrange(desc(n_reads_tot))\n\ng_hv_family <- g_comp_base + \n  geom_col(data=hv_family_counts_display, position = \"stack\", width=1) +\n  scale_y_continuous(name=\"% HV Reads\", limits=c(0,1.01), \n                     breaks = seq(0,1,0.2),\n                     expand=c(0,0), labels = function(y) y*100) +\n  scale_fill_manual(values = custom_palette_with_black, name = \"Viral family\") +\n  labs(title=\"Family composition of human-viral reads\") +\n  guides(fill=guide_legend(ncol=4)) +\n#  facet_grid(~dataset + sample_type, scales=\"free_x\") +\n  theme_kit + \n  theme(\n    plot.title = element_text(size=rel(1.4), hjust=0, face=\"plain\")\n    ) + \n    coord_flip()\ng_hv_family\n```\n\n::: {.cell-output-display}\n![](2024-09-24-blog3-preanalysis_files/figure-html/explore-hv-family-sample-type-1.svg)\n:::\n\n```{.r .cell-code}\n#ggsave(\"/Users/harmonbhasin/work/securebio/blogs/blog_3/hv_family_sample_type.png\", g_hv_family, width = 15, height = 5)\n```\n:::\n\n\n\nWe can start off by looking at the family composition of human-infecting viruses in both sample types. We can see that Anelloviridae is the most abudant family in plasma, whereas Flavivirdae is the most abundant family in whole blood. To get a better understanding of this breakdown, we can look at the families in each study.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Count reads for each human-viral family\nhv_family_counts <- hv_reads_family %>% \n  group_by(name, taxid, dataset) %>%\n  count(name = \"n_reads_hv\") %>%\n  group_by(dataset) %>%\n  mutate(p_reads_hv = n_reads_hv/sum(n_reads_hv))\n\n# Identify high-ranking families and group others\nhv_family_major_tab <- hv_family_counts %>% group_by(name) %>% \n  filter(p_reads_hv == max(p_reads_hv)) %>% filter(row_number() == 1) %>%\n  arrange(desc(p_reads_hv)) %>% filter(p_reads_hv > threshold_major_family)\nhv_family_counts_major <- hv_family_counts %>%\n  mutate(name_display = ifelse(name %in% hv_family_major_tab$name, name, \"Other\")) %>%\n  group_by(dataset, name_display) %>%\n  summarize(n_reads_hv = sum(n_reads_hv), p_reads_hv = sum(p_reads_hv), \n            .groups=\"drop\") %>%\n  mutate(name_display = factor(name_display, \n                               levels = c(hv_family_major_tab$name, \"Other\")))\nhv_family_counts_display <- hv_family_counts_major %>%\n  rename(p_reads = p_reads_hv, classification = name_display) %>%\n  left_join(libraries[3:4] %>% unique(), by=c(\"dataset\"))\n\n# Create a custom color palette with up to 20 colors\nn_classifications <- length(unique(hv_family_counts_display$classification)) - 1\n\ncustom_palette_with_black <- c(\n  custom_palette[1:n_classifications],\n  \"black\"\n)\n\n# Get most prominent families for text\nhv_family_collate <- hv_family_counts %>%\n  group_by(name, taxid, dataset) %>% \n  summarize(n_reads_tot = sum(n_reads_hv),\n            p_reads_max = max(p_reads_hv), .groups=\"drop\") %>% \n  arrange(desc(n_reads_tot))\n\ng_hv_family <- g_comp_base_study + \n  geom_col(data=hv_family_counts_display, position = \"stack\", width=1) +\n  scale_y_continuous(name=\"% HV Reads\", limits=c(0,1.01), \n                     breaks = seq(0,1,0.2),\n                     expand=c(0,0), labels = function(y) y*100) +\n  scale_fill_manual(values = custom_palette_with_black, name = \"Viral family\") +\n  labs(title=\"Family composition of human-viral reads\") +\n  guides(fill=guide_legend(ncol=4)) +\n#  facet_grid(~dataset + sample_type, scales=\"free_x\") +\n  theme_kit + \n  theme(\n    plot.title = element_text(size=rel(1.4), hjust=0, face=\"plain\")\n    ) + \n    coord_flip()\ng_hv_family\n```\n\n::: {.cell-output-display}\n![](2024-09-24-blog3-preanalysis_files/figure-html/explore-hv-family-study-1.svg)\n:::\n\n```{.r .cell-code}\n#ggsave(\"/Users/harmonbhasin/work/securebio/blogs/blog_3/hv_family_study.png\", g_hv_family, width = 15, height = 5)\n```\n:::\n\n\n\nComparing individual studies to each other, we see that there is a wide range of human-infecting virus depending on the study, even within the same sample type.\n\n### Species composition\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataset_hv_reads_species <- hv_reads_species %>%\n  group_by(name, taxid, dataset, sample) %>%\n  count(name = \"n_reads_hv\")\n\nall_dataset_ra <- read_counts_raw %>%\n  left_join(dataset_hv_reads_species, by=c(\"sample\")) %>%\n  mutate(n_reads_hv = replace_na(n_reads_hv, 0)) %>%\n  left_join(libraries, by=c(\"sample\", \"dataset\")) %>%\n  mutate(ra = n_reads_hv / n_reads_raw)\n\nfiltered_dataset_ra <- all_dataset_ra %>%\n  filter(name %in% viruses_of_interest) %>%\n  filter(ra != 0) %>%\n  mutate(common_name = viruses_of_interest_common[match(name, viruses_of_interest)]) %>%\n  mutate(name = common_name) %>%\n  select(-common_name)\n\n# Once again, we filter for samples with 0 reads\ng_hv_species <- ggplot(filtered_dataset_ra, aes(x = name, y = ra, color = sample_type, shape=dataset)) +\n  geom_quasirandom(method = \"quasirandom\", size =1) +\n  scale_y_log10(labels = label_log(digits = 3)) +\n  scale_color_brewer(palette = \"Dark2\") +\n  theme_kit +\n  coord_flip()\ng_hv_species\n```\n\n::: {.cell-output-display}\n![](2024-09-24-blog3-preanalysis_files/figure-html/hv-species-1.svg)\n:::\n\n```{.r .cell-code}\n#ggsave(\"/Users/harmonbhasin/work/securebio/blogs/blog_3/hv_species.png\", g_hv_species, width = 15, height = 10)\n```\n:::\n\n\n\n\n\n\n\nTo gain a more granular understanding of each sample type, we can look at the relative abundance of specific viruses in each sample type that may be of interest (totalling to 22): those that are linked to disease, characterized by latent infections (this is in accordance to the NAO's interest to detecting \"stealth\" pandemics), and those that are blood-borne. We get a wide range of human infecting viruses including Hepatitis, HIV, Herpes, and HPV. Importantly, most viruses seem to be detected in both sample types. When comparing the coverage of all viruses in each sample type, we see that plasma contains 104 unique viruses, whereas whole blood only countains about 56. However, when looking at these closely, we see that the majority of viruses captured by plasma all come from Anellovirdae, a non-harmful family of viruses. When we only look at the viruses specified above, we find that plasma contains 18 out of the 22 viruses, whereas whole blood contains 17 out of the 22 viruses. Specifically, plasma uniquely contains HBV, whereas whole blood uniquely contains HTLV-1 and HTLV-2.  \n\n# Discussion\n\n\n# Conclusion\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}